package com.entidades.buenSabor.business.mapper;

import com.entidades.buenSabor.domain.dto.ArticuloManufacturadoDetalleDto;
import com.entidades.buenSabor.domain.entities.ArticuloManufacturadoDetalle;
import java.util.ArrayList;
import java.util.List;
import javax.annotation.processing.Generated;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

@Generated(
    value = "org.mapstruct.ap.MappingProcessor",
    date = "2024-06-27T17:01:06-0300",
    comments = "version: 1.5.5.Final, compiler: IncrementalProcessingEnvironment from gradle-language-java-8.7.jar, environment: Java 17.0.10 (Oracle Corporation)"
)
@Component
public class ArticuloManufacturadoDetalleMapperImpl implements ArticuloManufacturadoDetalleMapper {

    @Autowired
    private ArticuloMapper articuloMapper;

    @Override
    public ArticuloManufacturadoDetalleDto toDTO(ArticuloManufacturadoDetalle source) {
        if ( source == null ) {
            return null;
        }

        ArticuloManufacturadoDetalleDto articuloManufacturadoDetalleDto = new ArticuloManufacturadoDetalleDto();

        articuloManufacturadoDetalleDto.setId( source.getId() );
        articuloManufacturadoDetalleDto.setEliminado( source.isEliminado() );
        articuloManufacturadoDetalleDto.setFechaBaja( source.getFechaBaja() );
        articuloManufacturadoDetalleDto.setCantidad( source.getCantidad() );
        articuloManufacturadoDetalleDto.setArticuloInsumo( articuloMapper.toDTO( source.getArticuloInsumo() ) );

        return articuloManufacturadoDetalleDto;
    }

    @Override
    public ArticuloManufacturadoDetalle toEntity(ArticuloManufacturadoDetalleDto source) {
        if ( source == null ) {
            return null;
        }

        ArticuloManufacturadoDetalle.ArticuloManufacturadoDetalleBuilder<?, ?> articuloManufacturadoDetalle = ArticuloManufacturadoDetalle.builder();

        articuloManufacturadoDetalle.id( source.getId() );
        articuloManufacturadoDetalle.eliminado( source.isEliminado() );
        articuloManufacturadoDetalle.fechaBaja( source.getFechaBaja() );
        articuloManufacturadoDetalle.cantidad( source.getCantidad() );
        articuloManufacturadoDetalle.articuloInsumo( articuloMapper.toEntity( source.getArticuloInsumo() ) );

        return articuloManufacturadoDetalle.build();
    }

    @Override
    public List<ArticuloManufacturadoDetalleDto> toDTOsList(List<ArticuloManufacturadoDetalle> source) {
        if ( source == null ) {
            return null;
        }

        List<ArticuloManufacturadoDetalleDto> list = new ArrayList<ArticuloManufacturadoDetalleDto>( source.size() );
        for ( ArticuloManufacturadoDetalle articuloManufacturadoDetalle : source ) {
            list.add( toDTO( articuloManufacturadoDetalle ) );
        }

        return list;
    }
}
